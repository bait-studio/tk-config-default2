# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.

inculdes:
- ./templates/tk-houdini.yml
- ./templates/tk-nuke.yml

#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
    sg_asset_type:
        type: str
    Asset:
        type: str
    name:
        type: str
        filter_by: alphanumeric
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"
    version_four:
       type: int
       format_spec: "04"
       alias: version
    timestamp:
        type: str
    width:
        type: int
    height:
        type: int
    segment_name:
        type: str

    # Represents the optional output name for frames written by the Shotgun Write Node
    nuke.output:
        alias: output
        type: str
        filter_by: alphanumeric
    
    # Represents the optional output name for frames written by the After Effects Publish Rendering Plugin
    afx.comp:
        alias: comp
        type: str
        filter_by: alphanumeric
    afx.mov.ext:
        alias: extension
        type: str
        choices:
            mov: Quicktime Movie (.mov)
            avi: Audio Video Interleaved (.avi)

    SEQ:
        type: sequence
        format_spec: "04"

    eye:
        type: str

    # these are used by the Hiero exporter and pipeline
    YYYY:
        type: int
        format_spec: "04"
    MM:
        type: int
        format_spec: "02"
    DD:
        type: int
        format_spec: "02"
        alias: DD
    project:
        type: str
    track:
        type: str

    # These are used for the Mari UDIM pipeline:
    UDIM:
        type: sequence
        default: "<UDIM>"
    mari.channel:
        type: str
        alias: channel
    mari.layer:
        type: str
        alias: layer
    mari.project_name:
        type: str
        alias: name
    asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    task_name:
        type: str
        shotgun_entity_type: Task
        shotgun_field_name: content

    # Maya supports two extension types.
    maya_extension:
        type: str
        choices:
            ma: Maya Ascii (.ma)
            mb: Maya Binary (.mb)
        default: ma
        alias: extension
    
    #
    # Substance Designer
    #
    substancedesigner.texture_extension:
        type: str
        alias: extension

    substancedesigner.channel:
        type: str
        alias: channel

    substancedesigner.package.name:
        type: str
        alias: name

    substancedesigner.graph.name:
        type: str

    substancedesigner.extension:
        type: str
        choices:
            sbs: Substance Design File (.sbs)
        default: sbs
        alias: extension
    
    #
    # Substance Painter
    #
    substancepainter.texture_extension:
        type: str
        alias: extension

    substancepainter.texture_name:
        type: str



#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:

    # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
    # templates. This also makes it easy to change any of the common root paths and have the
    # changes apply to all templates that use them.
    #
    # These don't require the standard formatting (with definition and root_name) because they
    # will be set within each template that uses the alias.
    shot_root: sequences/{Sequence}/{Shot}
    shot_step_root: sequences/{Sequence}/{Shot}/{Step}
    asset_root: assets/{sg_asset_type}/{Asset}/{Step}
    sequence_root: sequences/{Sequence}


    ##########################################################################################
    # Project level paths
    #

    #
    # Hiero
    #

    # The location of WIP files
    hiero_project_work:
        definition: 'editorial/work/{name}_v{version}.hrox'
    hiero_project_work_area:
        definition: 'editorial/work'
    # The location of backups of WIP files
    hiero_project_snapshot:
        definition: 'editorial/work/snapshots/{name}_v{version}_{timestamp}.hrox'
    # The location of published hiero files
    hiero_project_publish:
        definition: 'editorial/publish/{name}_v{version}.hrox'
    hiero_project_publish_area:
        definition: 'editorial/publish'
    
    # USD paths
    # assets/{sg_asset_type}/{Asset}/{Step}/publish/usd/{name}/v{version}/{Asset}_{Step}_{name}.v{version}.usd'
    usd_asset_publish:
        definition: '@asset_root/publish/usd/{name}/v{version}/{Asset}_{Step}_{name}.v{version}.usd'

    usd_shot_publish::
        definition: '@shot_step_root/publish/usd/{name}/v{version}/{Shot}_{Step}_{name}_v{version}.usd'


    ##########################################################################################
    # Sequence level paths
    #


    ##########################################################################################
    # Shot level paths
    #

    #
    # Photoshop
    #

    # The location of WIP files
    photoshop_shot_work:
        definition: '@shot_step_root/work/photoshop/{Shot}_{name}.v{version}.psd'
    shot_work_area_photoshop:
        definition: '@shot_step_root/work/photoshop'
    # The location of backups of WIP files
    photoshop_shot_snapshot:
        definition: '@shot_step_root/work/photoshop/snapshots/{Shot}_{name}.v{version}.{timestamp}.psd'
    # The location of published files
    shot_publish_area_photoshop:
        definition: '@shot_step_root/publish/photoshop'
    photoshop_shot_publish:
        definition: '@shot_step_root/publish/photoshop/{Shot}_{name}.v{version}.psd'
    # The location of the published images
    photoshop_shot_png_publish:
        definition: '@shot_step_root/publish/photoshop/{Shot}_{name}.v{version}.png'
    photoshop_shot_jpg_publish:
        definition: '@shot_step_root/publish/photoshop/{Shot}_{name}.v{version}.jpg'

    #
    # After Effects
    #

    # The location of WIP files
    aftereffects_shot_work:
        definition: '@shot_step_root/work/afx/{Shot}_{name}.v{version}.aep'
    shot_work_area_aftereffects:
        definition: '@shot_step_root/work/afx'
    # The location of backups of WIP files
    aftereffects_shot_snapshot:
        definition: '@shot_step_root/work/afx/snapshots/{Shot}_{name}.v{version}.{timestamp}.aep'
    # The location of published files
    shot_publish_area_aftereffects:
        definition: '@shot_step_root/publish/afx'
    aftereffects_shot_publish:
        definition: '@shot_step_root/publish/afx/{Shot}_{name}.v{version}.aep'
    aftereffects_shot_render_pub_mono:
        definition: '@shot_step_root/publish/elements/{name}/v{version}/{Shot}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_shot_render_movie:
        definition: '@shot_step_root/review/{Shot}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'

    #
    # Maya
    #

    # define the location of a work area
    shot_work_area_maya:
        definition: '@shot_step_root/work/maya'
    # define the location of a publish area
    shot_publish_area_maya:
        definition: '@shot_step_root/publish/maya'
    # The location of WIP files
    maya_shot_work:
        definition: '@shot_step_root/work/maya/{Shot}_{name}.v{version}.{maya_extension}'
    # The location of backups of WIP files
    maya_shot_snapshot:
        definition: '@shot_step_root/work/maya/snapshots/{Shot}_{name}.v{version}.{timestamp}.{maya_extension}'
    # The location of published maya files
    maya_shot_publish:
        definition: '@shot_step_root/publish/maya/{Shot}_{name}.v{version}.{maya_extension}'


    


    #
    # Hiero
    #

    # export of shot asset data from hiero
    hiero_plate_path_exr:
        definition: '@sequence_root/{Shot}/editorial/plates/{Shot}_{track}_v{version}/{Shot}_{track}_v{version}.{SEQ}.exr'
    hiero_plate_path_dpx:
        definition: '@sequence_root/{Shot}/editorial/plates/{Shot}_{track}_v{version}/{Shot}_{track}_v{version}.{SEQ}.dpx'

    #
    # Blender
    # Based on https://github.com/diegogarciahuerta/tk-blender/blob/master/config/core/templates.yml
    #

    # define the location of a work area
    shot_work_area_blender:
        definition: '@shot_step_root/work/blender'

    # define the location of a publish area
    shot_publish_area_blender:
        definition: '@shot_step_root/publish/blender'

    # The location of WIP session files
    blender_shot_work:
        definition: '@shot_step_root/work/blender/{name}.v{version}/{Shot}_{name}.v{version}.blend'

    # The location of backups of WIP session files
    blender_shot_snapshot:
        definition: '@shot_step_root/work/blender/snapshots/{name}.v{version}/{Shot}_{name}.v{version}.{timestamp}.blend'

    # The location of published session files
    blender_shot_publish:
        definition: '@shot_step_root/publish/blender/{name}.v{version}/{Shot}_{name}.v{version}.blend'


    ##########################################################################################
    # Asset pipeline


    #
    # Alembic caches
    #

    asset_alembic_cache:
        definition: '@asset_root/publish/caches/{Asset}_{name}.v{version}.abc'

    #
    # Photoshop
    #

    # The location of WIP files
    photoshop_asset_work:
        definition: '@asset_root/work/photoshop/{Asset}_{name}.v{version}.psd'
    asset_work_area_photoshop:
        definition: '@asset_root/work/photoshop'
    # The location of backups of WIP files
    photoshop_asset_snapshot:
        definition: '@asset_root/work/photoshop/snapshots/{Asset}_{name}.v{version}.{timestamp}.psd'
    # The location of published files
    asset_publish_area_photoshop:
        definition: '@asset_root/publish/photoshop'
    photoshop_asset_publish:
        definition: '@asset_root/publish/photoshop/{Asset}_{name}.v{version}.psd'
    # The location of the published images
    photoshop_asset_png_publish:
        definition: '@asset_root/publish/photoshop/{Asset}_{name}.v{version}.png'
    photoshop_asset_jpg_publish:
        definition: '@asset_root/publish/photoshop/{Asset}_{name}.v{version}.jpg'
    #
    # after effects
    #

    # The location of WIP files
    aftereffects_asset_work:
        definition: '@asset_root/work/afx/{Asset}_{name}.v{version}.aep'
    asset_work_area_aftereffects:
        definition: '@asset_root/work/afx'
    # The location of backups of WIP files
    aftereffects_asset_snapshot:
        definition: '@asset_root/work/afx/snapshots/{Asset}_{name}.v{version}.{timestamp}.aep'
    # The location of published files
    asset_publish_area_aftereffects:
        definition: '@asset_root/publish/afx'
    aftereffects_asset_publish:
        definition: '@asset_root/publish/afx/{Asset}_{name}.v{version}.aep'
    aftereffects_asset_render_pub_mono:
        definition: '@asset_root/publish/elements/{name}/v{version}/{Asset}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_asset_render_movie:
        definition: '@asset_root/review/{Asset}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'

    #
    # Mari
    #
    asset_mari_texture_tif:
        definition: '@asset_root/publish/mari/{name}_{mari.channel}[_{mari.layer}].v{version}.{UDIM}.tif'

    #
    # Maya
    #

    # define the location of a work area
    asset_work_area_maya:
        definition: '@asset_root/work/maya'
    # define the location of a publish area
    asset_publish_area_maya:
        definition: '@asset_root/publish/maya'
    # The location of WIP files
    maya_asset_work:
        definition: '@asset_root/work/maya/{Asset}_{name}.v{version}.{maya_extension}'
    # The location of backups of WIP files
    maya_asset_snapshot:
        definition: '@asset_root/work/maya/snapshots/{Asset}_{name}.v{version}.{timestamp}.{maya_extension}'
    # The location of published maya files
    maya_asset_publish:
        definition: '@asset_root/publish/maya/{Asset}_{name}.v{version}.{maya_extension}'





    #
    # Blender
    # Based on https://github.com/diegogarciahuerta/tk-blender/blob/master/config/core/templates.yml
    #

    # Location of a work area
    asset_work_area_blender:
        definition: '@asset_root/work/blender'

    # Location of a publish area
    asset_publish_area_blender:
        definition: '@asset_root/publish/blender'

    # Location of WIP session files
    blender_asset_work:
        definition: '@asset_work_area_blender/{Asset}_{name}.v{version}.blend'

    # Location of backups of WIP session files
    blender_asset_snapshot:
        definition: '@asset_work_area_blender/snapshots/{Asset}_{name}.v{version}.{timestamp}.blend'

    # Location of the published session files
    blender_asset_publish:
        definition: '@asset_publish_area_blender/{Asset}_{name}.v{version}.blend'

    #
    # Substance Designer
    #

    # asset
    # define the location of the work area
    asset_work_area_substancedesigner:
        definition: '@asset_root/work/substancedesigner'
        root_name: 'qnap'

    # define the location of the publish area
    asset_publish_area_substancedesigner:
        definition: '@asset_root/publish/substancedesigner'
        root_name: 'qnap'

    # substancedesigner session snapshots
    substancedesigner_asset_work:
        definition: '@asset_work_area_substancedesigner/{Asset}_{substancedesigner.package.name}.v{version}.{substancedesigner.extension}'
        root_name: 'qnap'

    # substancedesigner session snapshots
    substancedesigner_asset_snapshot:
        definition: '@asset_work_area_substancedesigner/snapshots/{Asset}_{substancedesigner.package.name}.v{version}.{timestamp}.{substancedesigner.extension}'
        root_name: 'qnap'

    # substancedesigner package
    substancedesigner_asset_package_publish:
        definition: '@asset_publish_area_substancedesigner/{Asset}_{substancedesigner.package.name}.v{version}.{substancedesigner.extension}'
        root_name: 'qnap'

    # substancedesigner SBSAR package
    substancedesigner_asset_package_archive_publish:
        definition: '@asset_publish_area_substancedesigner/{Asset}_{substancedesigner.package.name}.v{version}.sbsar'
        root_name: 'qnap'

    # substancedesigner package as a preset
    substancedesigner_asset_package_mdl_publish:
        definition: '@asset_publish_area_substancedesigner/{Asset}_{substancedesigner.package.name}.v{version}.mdl'
        root_name: 'qnap'

    # substancedesigner graph output textures
    substancedesigner_asset_graph_textures_path_publish:
        definition: '@asset_publish_area_substancedesigner/textures/{substancedesigner.package.name}/{substancedesigner.graph.name}/{Asset}_textures_v{version}'
        root_name: 'qnap'

    # substancedesigner graph as mdle
    substancedesigner_asset_graph_mdle_path_publish:
        definition: '@asset_publish_area_substancedesigner/textures/{substancedesigner.package.name}/{substancedesigner.graph.name}/{Asset}_textures_v{version}.mdle'
        root_name: 'qnap'


    #
    # Substance Painter
    #

    # asset
    # define the location of a work area
    asset_work_area_substancepainter:
        definition: '@asset_root/work/substancepainter'
        root_name: 'qnap'
    # define the location of a publish area
    asset_publish_area_substancepainter:
        definition: '@asset_root/publish/substancepainter'
        root_name: 'qnap'

    # The location of WIP files
    substancepainter_asset_work:
        definition: '@asset_work_area_substancepainter/{Asset}_{name}.v{version}.spp'
        root_name: 'qnap'

    # The location of backups of WIP files
    substancepainter_asset_snapshot:
        definition: '@asset_work_area_substancepainter/snapshots/{Asset}_{name}.v{version}.{timestamp}.spp'
        root_name: 'qnap'

    # The folder where the textures are exported for a project
    substancepainter_asset_textures_path_export:
        definition: '@asset_work_area_substancepainter/export'
        root_name: 'qnap'

    # The location of published substance painter files
    substancepainter_asset_publish:
        definition: '@asset_publish_area_substancepainter/{Asset}_{name}.v{version}.spp'
        root_name: 'qnap'

    # a texture folder publish
    substancepainter_asset_textures_path_publish:
        definition: '@asset_publish_area_substancepainter/textures/{Asset}_textures_v{version}'
        root_name: 'qnap'

    # a texture folder publish
    substancepainter_asset_texture_path_publish:
        definition: '@asset_publish_area_substancepainter/textures/{Asset}_{substancepainter.texture_name}_v{version}.{substancepainter.texture_extension}'
        root_name: 'qnap'

#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:

    # when a review Version in Shotgun is created inside of Nuke, this is the
    # name that is being given to it (the code field)
    nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

    nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

    # defines how the {tk_version} token in Hiero gets formatted back to tk.
    hiero_version: "{version}"

    # define how new Mari projects should be named
    mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"
