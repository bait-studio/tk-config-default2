# Copyright (c) 2017 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

################################################################################

includes:
- ../app_locations.yml

################################################################################

# houdini
settings.tk-multi-loader2.houdini:
  action_mappings:
    Alembic Cache: [import]
    Houdini Scene: [merge]
    Image: [file_cop]
    Photoshop Image: [file_cop]
    Rendered Image: [file_cop]
    Texture: [file_cop]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# mari
settings.tk-multi-loader2.mari:
  action_mappings:
    Alembic Cache: [geometry_import]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
    publish_filters: []
  - caption: Assets - Linked
    entity_type: Asset
    filters:
    - [ linked_projects, is, "{context.project}" ]
    hierarchy: [ project.Project.name, sg_asset_type, code ]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
    publish_filters: []
  title_name: Import
  location: '@apps.tk-multi-loader2.location'
  
# maya
settings.tk-multi-loader2.maya:
  action_mappings:
    Alembic Cache: [reference, import]
    Image: [texture_node, image_plane]
    Maya Scene: [reference, import]
    Photoshop Image: [texture_node, image_plane]
    Rendered Image: [texture_node, image_plane]
    Texture: [texture_node, image_plane]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, "{context.user}"]
    - [project, is, "{context.project}"]
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# nuke
settings.tk-multi-loader2.nuke:
  action_mappings:
    Alembic Cache: [read_node]
    Flame Render: [read_node]
    Flame Quicktime: [read_node]
    Image: [read_node]
    Movie: [read_node]
    Nuke Script: [script_import]
    Photoshop Image: [read_node]
    Rendered Image: [read_node]
    Texture: [read_node]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# nuke studio (actions hook)
settings.tk-multi-loader2.nukestudio.project:
  actions_hook: '{self}/tk-nuke_actions.py'
  action_mappings:
    Image: [clip_import]
    Movie: [clip_import]
    Rendered Image: [clip_import]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

settings.tk-multi-loader2.nukestudio:
  actions_hook: '{self}/tk-nuke_actions.py'
  action_mappings:
    Alembic Cache: [read_node]
    Image: [read_node]
    Movie: [read_node]
    Nuke Script: [script_import]
    NukeStudio Project: [open_project]
    Photoshop Image: [read_node]
    Rendered Image: [read_node]
    Texture: [read_node]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# blender
settings.tk-multi-loader2.blender:
  actions_hook: '{engine}/tk-multi-loader2/tk-blender_actions.py'
  action_mappings:
    Alembic Cache: [import]
    Abc File: [import]
    Dae File: [import]
    Collada File: [import]
    Bvh File: [import]
    Motion Capture File: [import]
    Svg File: [import]
    Scalable Vector Graphics File: [import]
    Ply File: [import]
    Stanford File: [import]
    Stl File: [import]
    Glb File: [import]
    Gltf File: [import]
    Obj File: [import]
    Wavefront File: [import]
    X3d File: [import]
    Wrl File: [import]
    X3d Extensible 3D File: [import]
    Blender Project File: [link, append]
    Wav File: [asSequencerSound]
    Sound File: [asSequencerSound]
    Movie File: [asSequencerMovie, asCompositorNodeMovieClip]
    Image File: [asSequencerImage, asCompositorNodeImage]
    Texture File: [asSequencerImage, asCompositorNodeImage]
    Sound: [asSequencerSound]
    Movie: [asSequencerMovie, asCompositorNodeMovieClip]
    Image: [asSequencerImage, asCompositorNodeImage]
    Texture: [asSequencerImage, asCompositorNodeImage]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  location: "@apps.tk-multi-loader2.location"

  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# photoshop
settings.tk-multi-loader2.photoshop:
  action_mappings:
    Photoshop Image: [add_as_a_layer, open_file]
    Rendered Image: [add_as_a_layer, open_file]
    Image: [add_as_a_layer, open_file]
    Texture: [add_as_a_layer, open_file]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# after effects
settings.tk-multi-loader2.aftereffects:
  action_mappings:
    After Effects Project: [add_to_project, add_to_comp]
    Maya Scene: [add_to_project, add_to_comp]
    Photoshop Image: [add_to_project, add_to_comp]
    Rendered Image: [add_to_project, add_to_comp]
    Image: [add_to_project, add_to_comp]
    Movie: [add_to_project, add_to_comp]
    Texture: [add_to_project, add_to_comp]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_asset_type, code]
  - caption: Shots
    entity_type: Shot
    filters:
    - [project, is, '{context.project}']
    hierarchy: [sg_sequence, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, '{context.user}']
    - [project, is, '{context.project}']
    hierarchy: [entity, content]
  actions_hook: "{engine}/tk-multi-loader2/basic/scene_actions.py"
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# Substance Designer
settings.tk-multi-loader2.substancedesigner:
  actions_hook: '{engine}/tk-multi-loader2/tk-substancedesigner_actions.py'
  action_mappings:
    Image: [bitmap]
    Texture: [bitmap]
    Rendered Image: [bitmap]
    SVG File: [svg]
    Font: [font]
    TTF File: [font]
    FBX File: [scene]
    Motion Builder FBX: [scene]
    IES File: [light_profile]
    Ies File: [light_profile]
    MDSDF File: [bsdf_measurement]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_asset_type, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, "{context.user}"]
    - [project, is, "{context.project}"]
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"

# substance painter
settings.tk-multi-loader2.substancepainter:
  actions_hook: '{engine}/tk-multi-loader2/tk-substancepainter_actions.py'
  action_mappings:
    Image: [environment, colorlut, alpha, texture]
    Texture: [environment, colorlut, alpha, texture]
    Rendered Image: [environment, colorlut, alpha, texture]
    Substance Material Preset: [preset]
    Sppr File: [preset]
    PopcornFX : [script]
    Pkfx File : [script]
    Shader: [shader]
    Glsl File: [shader]
    Substance Export Preset: [export]
    Spexp File: [export]
    Substance Smart Material: [smartmaterial]
    Spsm File: [smartmaterial]
    Substance File: [basematerial, alpha, texture, filter, procedural, generator]
    Sbsar File: [basematerial, alpha, texture, filter, procedural, generator]
    Substance Smart Mask: [smartmask]
    Spmsk File: [smartmask]
  entities:
  - caption: Assets
    entity_type: Asset
    filters:
    - [project, is, "{context.project}"]
    hierarchy: [sg_asset_type, code]
  - caption: My Tasks
    entity_type: Task
    filters:
    - [task_assignees, is, "{context.user}"]
    - [project, is, "{context.project}"]
    hierarchy: [entity, content]
  publish_filters: [["sg_status_list", "is_not", null]]
  location: "@apps.tk-multi-loader2.location"